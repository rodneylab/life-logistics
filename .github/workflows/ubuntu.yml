name: Ubuntu CI Test
on:
  push:
    branches: [main, master, dev]
  pull_request:
    branches: [main, master, dev]
permissions:
  contents: read
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit
          disable-telemetry: true
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: install
        run: sudo apt-get update && sudo apt-get install doxygen lcov libxrandr-dev libxcursor-dev libudev-dev libopenal-dev libflac-dev libvorbis-dev libgl1-mesa-dev libegl1-mesa-dev freeglut3-dev libxinerama-dev libxi-dev
      - name: Setup Cpp
        uses: aminya/setup-cpp@17c11551771948abc5752bbf3183482567c7caf0 # v1.1.1
        with:
          clangtidy: true
      - name: configure
        run: |
          cmake -H. -Bbuild -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=On
      - name: building
        run: |
          cmake --build build --config Debug --target ComponentsTests QueriesTests SystemsTests Vector2DTests
      - name: run component unit tests
        working-directory: ./build/bin
        run: |
          ./ComponentsTests
      - name: run queries unit tests
        working-directory: ./build/bin
        run: |
          ./QueriesTests
      - name: run systems unit tests
        working-directory: ./build/bin
        run: |
          ./SystemsTests
      - name: run systems vector2d tests
        working-directory: ./build/bin
        run: |
          ./Vector2DTests
      - name: generate coverage
        working-directory: ./build
        run: |
          make cov
      - name: Install gcovr
        run: |
          pip install -r requirements.txt  --require-hashes
      - name: Generate JSON coverage report
        working-directory: ./build
        run: |
          gcovr -r .. . --filter ../src/ --branch --cobertura > coverage.xml
          #gcovr -r .. . --filter ../src/ --txt-metric branch --cobertura > coverage.xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@0565863a31f2c772f9f0395002a31e3f06189574 # v5.4.0
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
